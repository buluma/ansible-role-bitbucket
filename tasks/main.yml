---
- name: Include default variables
  ansible.builtin.include_vars: ../vars/main.yml

- name: Include release specific variables
  ansible.builtin.include_vars: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - ../vars
      skip: true

- name: Include release specific tasks
  ansible.builtin.include_tasks: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - .
      skip: true

- name: Groupadd
  ansible.builtin.group:
    name: "{{ bitbucket_group }}"
    system: true
    state: present

- name: Useradd
  ansible.builtin.user:
    name: "{{ bitbucket_owner }}"
    group: "{{ bitbucket_group }}"
    home: "{{ bitbucket_home }}"
    shell: /bin/bash
    system: true
    create_home: false
    state: present

- name: Prepare directories
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - dest: /etc/systemd/system
    - dest: "{{ bitbucket_catalina }}"
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
      mode: "0700"
    - dest: "{{ bitbucket_catalina }}/bin"
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
    - dest: "{{ bitbucket_home }}"
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
    - dest: "{{ bitbucket_home }}/shared"
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
      mode: "0750"

- name: Copy templates
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - dest: /etc/systemd/system/bitbucket.service
    - dest: "{{ bitbucket_catalina }}/bin/_start-webapp.sh"
      src: ./templates/opt/atlassian/bitbucket/bin/_start-webapp.sh.j2
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
      mode: "0755"
    - dest: "{{ bitbucket_catalina }}/bin/set-bitbucket-home.sh"
      src: ./templates/opt/atlassian/bitbucket/bin/set-bitbucket-home.sh.j2
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
      mode: "0755"
    - dest: "{{ bitbucket_catalina }}/bin/set-bitbucket-user.sh"
      src: ./templates/opt/atlassian/bitbucket/bin/set-bitbucket-user.sh.j2
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
      mode: "0755"
  notify:
    - Systemctl daemon-reload
    - Systemctl restart bitbucket.service

- name: Prepare files
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - dest: /etc/systemd/system/bitbucket.service
    - dest: "{{ bitbucket_catalina }}/bin/_start-webapp.sh"
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
      mode: "0755"
    - dest: "{{ bitbucket_catalina }}/bin/set-bitbucket-home.sh"
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
      mode: "0755"
    - dest: "{{ bitbucket_catalina }}/bin/set-bitbucket-user.sh"
      owner: "{{ bitbucket_owner }}"
      group: "{{ bitbucket_group }}"
      mode: "0755"
  notify:
    - Systemctl daemon-reload
    - Systemctl restart bitbucket.service

- name: Patch /var/atlassian/application-data/bitbucket/shared/bitbucket.properties
  community.general.ini_file:
    path: "{{ bitbucket_home }}/shared/bitbucket.properties"
    section: ""
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    owner: "{{ bitbucket_owner }}"
    group: "{{ bitbucket_group }}"
    mode: "0644"
    no_extra_spaces: true
    state: "{{ item.value | ternary('present', 'absent') }}"
  loop:
    - { option: server.port, value: "{{ bitbucket_catalina_connector_port }}" }
    - { option: server.scheme, value: "{{ bitbucket_catalina_connector_scheme }}" }
    - { option: server.secure, value: "{{ bitbucket_catalina_connector_secure }}" }
    - { option: server.proxy-name, value: "{{ bitbucket_catalina_connector_proxyname }}" }
    - { option: server.proxy-port, value: "{{ bitbucket_catalina_connector_proxyport }}" }
    - { option: server.context-path, value: "{{ bitbucket_catalina_context_path }}" }
    - { option: server.session.timeout, value: "{{ (bitbucket_session_timeout | int) * 60 }}" }
    - { option: auth.remember-me.enabled, value: optional }
    - { option: auth.remember-me.token.expiry, value: "{{ ((bitbucket_autologin_cookie_age | int) / 60 / 24) | int }}" }
  notify:
    - Systemctl restart bitbucket.service

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Systemctl start bitbucket.service
  ansible.builtin.service:
    name: bitbucket.service
    state: started
    enabled: true
  changed_when: false
  failed_when: false
